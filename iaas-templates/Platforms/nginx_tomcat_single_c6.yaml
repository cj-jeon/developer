heat_template_version: 2013-05-23

description: Nginx + Tomcat Single CentOS 6

parameters:

  keypair_name:
    type: string
    label: keypair_name for all servers
    description: k5user keypair for all servers

  availability_zone:
    type: string
    label: availability_zone
    description: existing availability_zone

  dns_nameservers:
    type: comma_delimited_list
    description: dns name servers.
    default: ['133.162.193.9', '133.162.193.10']

  network_id:
    type: string
    label: Network ID
    description: existing network id

  subnet_id:
    type: string
    label: Subnet ID
    description: existing subnet id

  remote_host_cidr:
    type: string
    label: Host CIDR
    description: existing remote Host CIDR
    default: 0.0.0.0/0

  flavor:
    type: string
    label: Flavor
    default: S-1

resources:

  nginx_tomcat_single_c6:
    type: OS::Nova::Server
    properties:
      name: nginx_tomcat_single_c6
      key_name: { get_param: keypair_name }
      availability_zone: { get_param: availability_zone }
      block_device_mapping:
      - device_name: vda
        volume_id: {get_resource: nginx_tomcat_single_c6_systemvolume }
      flavor: { get_param: flavor }
      networks: [{"port": { get_resource: nginx_tomcat_single_c6_port }}]
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            write_files:
            - path: /root/install.sh
              permissions: '0755'
              owner: root:root
              content: |
                #!/bin/bash
                echo -e '----Start installing VM----\n\n'

                echo -e '--Update system--\n'
                yum -y update

                echo -e '--Install nginx--\n'
                rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
                yum -y install nginx

                echo -e '--Modify /etc/nginx/conf.d/default.conf--\n'
                sed -i '1,/^        root   \/usr\/share\/nginx\/html;$/s|^        root   /usr/share/nginx/html;$|        proxy_pass http://$nginx_tomcat_single_c6_IPADDR:8080/;|' /etc/nginx/conf.d/default.conf
                sed -i '1,/^        index  index\.html index\.htm;$/s|^        index  index.html index.htm;$|#       index  index.html index.htm;|' /etc/nginx/conf.d/default.conf

                echo -e '--Remove old version JDK 1.6 & 1.7--\n'
                yum remove java-1.6.0-openjdk
                yum remove java-1.7.0-openjdk

                echo -e '--Download and Install JDK 1.8.0--\n'
                cd /tmp
                wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u102-b14/jdk-8u102-linux-x64.rpm
                yum localinstall -y --nogpgcheck jdk-8u102-linux-x64.rpm

                echo -e '--Download and Install Tomcat 8.5.5--\n'
                wget http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.5/bin/apache-tomcat-8.5.5.tar.gz
                tar xzf apache-tomcat-8.5.5.tar.gz
                mkdir /usr/local/tomcat/
                mv apache-tomcat-8.5.5 /usr/local/tomcat/.
                cd /usr/local/tomcat
                ln -s apache-tomcat-8.5.5 default
                useradd -d /usr/local/tomcat -s /bin/bash tomcat
                chown -R tomcat:tomcat /usr/local/tomcat

                echo -e '--Make tomcat.sh--\n'
                cat >> /etc/profile.d/tomcat.sh << 'EOS'
                export JAVA_HOME=/usr/java/default
                export PATH=$PATH:$JAVA_HOME/bin
                export CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar
                export TOMCAT_HOME=/usr/local/tomcat/default
                export CATALINA_HOME=/usr/local/tomcat/default
                export CLASSPATH=$CLASSPATH:/$CATALINA_HOME/common/lib
                EOS
                chmod +x /etc/profile.d/tomcat.sh

                echo -e '--Make tomcat--\n'
                cat >> /etc/init.d/tomcat << 'EOS'
                #!/bin/bash
                #
                # Startup script for the Tomcat Servlet Container
                #
                # chkconfig: 2345 35 65
                # description: Tomcat is the servlet container that is used in the official
                #              Reference Implementation for the Java Servlet and JavaServer
                #              Pages technologies

                TOMCAT_USER=tomcat
                CATALINA_HOME=/usr/local/tomcat/default

                . /etc/rc.d/init.d/functions
                prog=tomcat

                start() {
                    echo -n $"Starting $prog: "
                    daemon --user $TOMCAT_USER $CATALINA_HOME/bin/startup.sh > /dev/null
                    RETVAL=$?
                    if [ $RETVAL -eq 0 ]; then
                        echo_success
                    else
                        echo_failure
                    fi
                    echo
                    [ $RETVAL = 0 ] && touch /var/lock/subsys/$prog
                    return $RETVAL
                }
                stop() {
                    echo -n $"Stopping $prog: "
                    daemon --user $TOMCAT_USER $CATALINA_HOME/bin/shutdown.sh > /dev/null
                    RETVAL=$?
                    if [ $RETVAL -eq 0 ]; then
                        echo_success
                    else
                        echo_failure
                    fi
                    echo
                    [ $RETVAL = 0 ] && rm -f /var/lock/subsys/$prog
                    return $RETVAL
                }

                # See how we were called.
                case "$1" in
                  start)
                    start
                    ;;
                  stop)
                    stop
                    ;;
                  restart)
                    stop
                    start
                    ;;
                  status)
                    INSTANCES=$(ps -aef | grep java | grep tomcat | grep org.apache.catalina.startup.Bootstrap | wc -l)
                    if [ $INSTANCES -eq 0 ]; then
                        echo $prog is stopped
                        RETVAL=3
                    else
                        if [ $INSTANCES -eq 1 ]; then
                            echo $prog is running 1 instance...
                        else
                            echo $prog is running $INSTANCES instances...
                        fi
                        RETVAL=0
                    fi
                    ;;
                  *)
                    echo $"Usage: $prog {start|stop|restart|status|help}"
                    exit 1
                esac

                exit $RETVAL
                EOS
                chmod +x /etc/init.d/tomcat

                echo -e '--Set SELinux boolean httpd_can_network_connect to on--\n'
                setsebool -P httpd_can_network_connect 1

                echo -e '--Service start nginx and Tomcat--\n'
                chkconfig tomcat on
                service tomcat start

                service nginx start
                chkconfig nginx on

            runcmd:
              - cat /root/install.sh > /var/log/install.log
              - echo -e "\n-- installer log --\n" >> /var/log/install.log
              - /root/install.sh >> /var/log/install.log

          params:
            $nginx_tomcat_single_c6_IPADDR: { get_attr: [ nginx_tomcat_single_c6_port , fixed_ips, 0, ip_address ] }

  nginx_tomcat_single_c6_port:
    type: OS::Neutron::Port
    properties:
      name: nginx_tomcat_single_c6_port
      network_id: { get_param: network_id }
      availability_zone: { get_param: availability_zone }
      security_groups:
        - {get_resource: nginx_tomcat_single_c6_common_security_group }
      fixed_ips:
        - subnet_id: { get_param: subnet_id }

  nginx_tomcat_single_c6_systemvolume:
    type: OS::Cinder::Volume
    properties:
      availability_zone: { get_param: availability_zone }
      description:
      image: CentOS 6.5 64bit (English) 05
      name: nginx_tomcat_single_c6_systemvolume
      size: 30
      volume_type: M1

  nginx_tomcat_single_c6_common_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: nginx_tomcat_single_c6_common_security_group
      rules:
        # ICMP
        - { direction: ingress, ethertype: IPv4, protocol: icmp, remote_ip_prefix: { get_param: remote_host_cidr } }
        # SSH
        - { direction: ingress, ethertype: IPv4, port_range_min: 22, port_range_max: 22, protocol: tcp, remote_ip_prefix: { get_param: remote_host_cidr } }
        # HTTP
        - { direction: egress, ethertype: IPv4, port_range_min: 80, port_range_max: 80, protocol: tcp, remote_ip_prefix: 0.0.0.0/0 }
        # HTTPS
        - { direction: egress, ethertype: IPv4, port_range_min: 443, port_range_max: 443, protocol: tcp, remote_ip_prefix: 0.0.0.0/0 }
        # DNS
        - { direction: egress, ethertype: IPv4, port_range_min: 53, port_range_max: 53, protocol: tcp, remote_ip_prefix: { get_param: [dns_nameservers, 0] } }
        - { direction: egress, ethertype: IPv4, port_range_min: 53, port_range_max: 53, protocol: tcp, remote_ip_prefix: { get_param: [dns_nameservers, 1] } }
        - { direction: egress, ethertype: IPv4, port_range_min: 53, port_range_max: 53, protocol: udp, remote_ip_prefix: { get_param: [dns_nameservers, 0] } }
        - { direction: egress, ethertype: IPv4, port_range_min: 53, port_range_max: 53, protocol: udp, remote_ip_prefix: { get_param: [dns_nameservers, 1] } }
        # metadata
        - { direction: egress, port_range_max: 80, port_range_min: 80, protocol: tcp, remote_ip_prefix: 169.254.169.254/32 }


outputs:
  nginx_tomcat_single_c6_IP:
    value:
      str_replace:
        template: http://$ADDRESS/
        params:
          $ADDRESS: { get_attr: [ nginx_tomcat_single_c6_port, fixed_ips, 0, ip_address ] }
    description: nginx_tomcat_single_c6 IP Address
